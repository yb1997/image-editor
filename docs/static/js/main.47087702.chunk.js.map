{"version":3,"sources":["components/menubar-options/menu-option.component.tsx","components/menubar-options/adjust-menu-option.component.tsx","_action-types/tool-drawer.action.ts","components/menubar-options/overlay-menu-option.component.tsx","components/menubar-options/transform-menu-option.component.tsx","context.ts","components/menubar.component.tsx","constant.ts","components/header.component.tsx","components/adjust-tools.component.tsx","_action-types/adjust-image.action.ts","components/tool-drawer.component.tsx","_action-types/menu-tool.action.ts","_reducers/root.reducer.ts","_reducers/drawer.reducer.ts","_reducers/menu-tool.reducer.ts","_store/store.ts","index.tsx"],"names":["MenuOption","props","react","value","concat","title","toLowerCase","name","className","id","type","onClick","htmlFor","icon","aria-hidden","AdjustMenuOption","dispatch","useDispatch","menu_option_component_MenuOption","console","log","OverlayMenuOption","TransformMenuOption","appContext","React","createContext","canvas","ctx","Provider","Consumer","SelectedMenu","HistoryButton","styled","button","_templateObject","UndoButton","_templateObject2","RedoButton","_templateObject3","MenuBarCore","editorState","useSelector","p","imageEditor","disabled","past","length","UndoActionCreators","undo","adjust_menu_option_component_AdjustMenuOption","overlay_menu_option_component_OverlayMenuOption","transform_menu_option_component_TransformMenuOption","future","redo","MenuBar","menubar_component_MenuBarCore","Header","AdjustToolsCore","imageEditorState","_useState","useState","_useState2","Object","slicedToArray","isFirstTime","setIsFirstTime","isImageInverted","present","adjustImage","invertImage","useEffect","actualData","getImageData","width","height","newImageData","ImageData","data","size","i","putImageData","save","react_default","a","createElement","onChange","checked","AdjustTools","adjust_tools_component_AdjustToolsCore","ToolDrawer","openDrawer","s","drawer","isOpen","adjust_tools_component_AdjustTools","defaultAdjustImageState","brightness","contrast","state","arguments","undefined","action","objectSpread","payload","undoable","filter","prevHis","adjImg","rootReducer","combineReducers","selectedMenu","NONE","store","createStore","App","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addImage","bind","assertThisInitialized","configureCanvas","inherits","createClass","key","e","img","Image","file","target","files","fr","FileReader","_this$state","onload","aspectRatio","drawImage","onloadend","src","result","readAsDataURL","_this2","setState","prevState","_props","getContext","config","es","header_component_Header","accept","ref","menubar_component_MenuBar","tool_drawer_component_ToolDrawer","rootElement","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.47087702.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\nexport const MenuOption = (props: { onClick: (e: React.MouseEvent) => void, title: string, icon: string }) => {\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                value={`${props.title.toLowerCase()}-control`\r\n                }\r\n                name=\"menu-control\"\r\n                className=\"menu-control\"\r\n                id={`${props.title.toLowerCase()}-control`}\r\n                type=\"radio\"\r\n                onClick={props.onClick}\r\n            />\r\n            <label\r\n                className=\"menu-tool\"\r\n                htmlFor={`${props.title.toLowerCase()}-control`}\r\n                title={props.title}\r\n            >\r\n                <i className={`fa fa-2x fa-${props.icon}`} aria-hidden=\"true\" ></i>\r\n            </label>\r\n        </>\r\n    );\r\n}","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { OPEN_TOOL_DRAWER } from \"../../_action-types\";\r\nimport { MenuOption } from \"./index\";\r\n\r\nexport const AdjustMenuOption = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = () => {\r\n        console.log(\"Adjust option clicked\");\r\n        dispatch({ type: OPEN_TOOL_DRAWER });\r\n    }\r\n\r\n    return (\r\n        <MenuOption onClick={onClick} title=\"Adjust\" icon=\"adjust\" />\r\n    )\r\n}","export const OPEN_TOOL_DRAWER = \"openToolDrawer\";\r\n\r\nexport const CLOSE_TOOL_DRAWER = \"closeToolDrawer\";\r\n\r\nexport const TOGGLE_TOOL_DRAWER = \"toggleToolDrawer\";\r\n","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { OPEN_TOOL_DRAWER } from \"../../_action-types\";\r\nimport { MenuOption } from \"./index\";\r\n\r\nexport const OverlayMenuOption = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = () => {\r\n        console.log(\"Overlay option clicked\");\r\n        dispatch({ type: OPEN_TOOL_DRAWER });\r\n    }\r\n\r\n    return (\r\n        <MenuOption onClick={onClick} title=\"Overlay\" icon=\"window-restore\" />\r\n    );\r\n}","import * as React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { OPEN_TOOL_DRAWER } from \"../../_action-types\";\r\nimport { MenuOption } from \".\";\r\n\r\n\r\nexport const TransformMenuOption = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = () => {\r\n        console.log(\"transform option clicked\");\r\n        dispatch({ type: OPEN_TOOL_DRAWER });\r\n    }\r\n\r\n    return (\r\n        <MenuOption onClick={onClick} title=\"Transform\" icon=\"arrows\" />\r\n    )\r\n}","import React, { Ref } from \"react\";\r\n\r\ntype contextType = { canvas: HTMLCanvasElement | null, ctx: CanvasRenderingContext2D | null };\r\n\r\nexport const appContext = React.createContext<contextType>({ canvas: null, ctx: null });\r\n\r\nexport const Provider = appContext.Provider;\r\n\r\nexport const Consumer = appContext.Consumer;\r\n\r\n","import * as React from \"react\";\r\nimport { ActionCreators as UndoActionCreators } from \"redux-undo\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { AdjustMenuOption, OverlayMenuOption, TransformMenuOption } from \"./menubar-options\";\r\nimport { Consumer } from \"../context\";\r\nimport { AppStore } from \"../_store\";\r\n\r\n\r\nexport type propType = { ctx: CanvasRenderingContext2D | null };\r\n\r\n\r\nconst HistoryButton = styled.button`\r\n  background-color: var(--DARK_THEME_BACKGROUND);\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0 1em;\r\n\r\n  &:disabled {\r\n    background: rgba(255,255,255,0.6);\r\n    color: #333;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst UndoButton = styled(HistoryButton)``;\r\n\r\nconst RedoButton = styled(HistoryButton)``;\r\n\r\nexport const MenuBarCore = (props: propType) => {\r\n  const dispatch = useDispatch();\r\n  const editorState = useSelector((p: AppStore) => p.imageEditor);\r\n\r\n  return (\r\n    <div className=\"menu-bar\">\r\n      <UndoButton disabled={editorState.past.length < 1} className=\"undo-btn\" onClick={() => dispatch(UndoActionCreators.undo())}>\r\n        <i className=\"fa fa-2x fa-undo\" title=\"undo\"></i>\r\n      </UndoButton>\r\n      <div className=\"tool-menu\">\r\n        <ul>\r\n          <li>\r\n            <AdjustMenuOption />\r\n          </li>\r\n          <li>\r\n            <OverlayMenuOption />\r\n          </li>\r\n          <li>\r\n            <TransformMenuOption />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <RedoButton disabled={editorState.future.length < 1} className=\"redo-btn\" onClick={() => dispatch(UndoActionCreators.redo())}>\r\n        <i className=\"fa fa-2x fa-repeat\" title=\"redo\"></i>\r\n      </RedoButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const MenuBar = () => {\r\n  return (\r\n    <Consumer>\r\n      {(props) => <MenuBarCore ctx={props.ctx} /> }\r\n    </Consumer>\r\n  );\r\n}\r\n","export enum SelectedMenu {\r\n    NONE = \"none\",\r\n    OVERLAY = \"overlay\",\r\n    TRANSFORM = \"transform\",\r\n    ADJUST = \"adjust\"\r\n}","import * as React from \"react\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h2 className=\"app-name\">Image Editor</h2>\r\n        </header>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Consumer } from \"../context\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { AppStore } from \"../_store\";\r\nimport { TOGGLE_INVERT_IMAGE } from \"../_action-types\";\r\n\r\n\r\ntype propType = { ctx: CanvasRenderingContext2D | null }\r\n\r\nexport const AdjustToolsCore = (props: propType) => {\r\n  const imageEditorState = useSelector((p: AppStore) => p.imageEditor);\r\n  const dispatch = useDispatch();\r\n  const [isFirstTime, setIsFirstTime] = useState(true);\r\n  const ctx = props.ctx;\r\n  const isImageInverted = imageEditorState.present.adjustImage.invertImage;\r\n\r\n  console.log(imageEditorState.past);\r\n\r\n  const invertImage = () => {\r\n    const actualData = ctx.getImageData(\r\n      0,\r\n      0,\r\n      ctx.canvas.width,\r\n      ctx.canvas.height\r\n    );\r\n\r\n    const newImageData = new ImageData(\r\n      actualData.data,\r\n      actualData.width,\r\n      actualData.height\r\n    );\r\n\r\n    const data = newImageData.data;\r\n    const size = data.length;\r\n\r\n    // invert color of each pixel\r\n    for (let i = 0; i < size; i++) {\r\n      if ((i + 1) % 4 === 0) {\r\n        continue;\r\n      }\r\n      data[i] = 255 - data[i];\r\n    }\r\n\r\n    ctx.putImageData(newImageData, 0, 0);\r\n\r\n    ctx.save();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isFirstTime) {\r\n      invertImage();\r\n    } else {\r\n      setIsFirstTime(false);\r\n    }\r\n  }, [isImageInverted]);\r\n\r\n  const handleChange = () => {\r\n    dispatch({ type: TOGGLE_INVERT_IMAGE });\r\n  }\r\n\r\n  return (\r\n    <div className=\"image-invert\">\r\n      <div className=\"toggle-wrapper\">\r\n        <input\r\n          id=\"image-invert-control\"\r\n          name=\"image-invert-control\"\r\n          type=\"checkbox\"\r\n          className=\"toggle material-toggle\"\r\n          onChange={handleChange}\r\n          checked={isImageInverted}\r\n        />\r\n      </div>\r\n      <label htmlFor=\"image-invert-control\">Invert Color</label>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport const AdjustTools = () => {\r\n  return (\r\n    <Consumer>\r\n      {(props) => <AdjustToolsCore ctx={props.ctx} />}\r\n    </Consumer>\r\n  );\r\n}\r\n","export const TOGGLE_INVERT_IMAGE = \"toggleInvertImage\";\r\n\r\nexport const ADJUST_BRIGHTNESS = \"adjustBrightness\";\r\n\r\nexport const ADJUST_CONTRAST = \"adjustContrast\";","import * as React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { AppStore } from \"../_store\";\r\nimport { CLOSE_TOOL_DRAWER } from \"../_action-types\";\r\nimport { AdjustTools } from \"./adjust-tools.component\";\r\n\r\nexport const ToolDrawer = () => {\r\n  const openDrawer = useSelector((s: AppStore) => s.drawer.isOpen);\r\n  const dispatch = useDispatch();\r\n  \r\n  return (\r\n    <div className={`tool-drawer ${openDrawer ? 'active': ''}`}>\r\n      <div className=\"close-drawer clear\">\r\n        <i onClick={() => dispatch({ type: CLOSE_TOOL_DRAWER })} className=\"fa fa-2x fa-times float-right\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div className=\"drawer-body\">\r\n        <AdjustTools />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const ADJUST_MENU_TOOL = \"adjustMenuTool\";\r\n\r\nexport const OVERLAY_MENU_TOOL = \"overlayMenuTool\";\r\n\r\nexport const TRANSFORM_MENU_TOOL = \"transformMenuTool\";\r\n\r\nexport const SELECT_MENU_TOOL_OPTION = \"selectMenuToolOption\";\r\n","import { combineReducers, AnyAction } from \"redux\";\r\nimport {\r\n  drawerReducer,\r\n  menuToolReducer as selectedMenu\r\n} from \"./index\";\r\nimport undoable, { FilterFunction, StateWithHistory } from \"redux-undo\";\r\nimport { TOGGLE_INVERT_IMAGE, ADJUST_BRIGHTNESS, ADJUST_CONTRAST } from \"../_action-types\";\r\n\r\n\r\n// #region Adjust Image Reducer\r\nexport interface IAdjustImage {\r\n  invertImage: boolean,\r\n  brightness: number,\r\n  contrast: number\r\n}\r\n\r\nconst defaultAdjustImageState = { invertImage: false, brightness: 100, contrast: 100 };\r\n\r\nconst adjustImage = (state: IAdjustImage = defaultAdjustImageState, action: AnyAction): IAdjustImage => {\r\n  switch(action.type) {\r\n    case TOGGLE_INVERT_IMAGE:\r\n      return { ...state, invertImage: !state.invertImage };\r\n    case ADJUST_BRIGHTNESS:\r\n      return { ...state, brightness: action.payload.brightness };\r\n    case ADJUST_CONTRAST:\r\n      return { ...state, contrast: action.payload.contrast };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// #endregion\r\n\r\n// #region Image Editing\r\ninterface IImageEditor {\r\n  adjustImage: IAdjustImage\r\n}\r\n\r\nconst editorStateDiff = (action, state, prevHis) => {\r\n  // return Object.keys(prevHis.present.adjustImage).map((key) => s[key]).some()\r\n  const adjImg = (state.adjustImage as IAdjustImage);\r\n  const s = prevHis.present.adjustImage as IAdjustImage;\r\n  return (\r\n    s.invertImage !== adjImg.invertImage ||\r\n    s.brightness !== adjImg.brightness ||\r\n    s.contrast !== adjImg.contrast\r\n  );\r\n}\r\n\r\nconst imageEditorCore = (state: IImageEditor = { adjustImage: defaultAdjustImageState }, action: AnyAction) => {\r\n  return {\r\n    adjustImage: adjustImage(state.adjustImage, action)\r\n  }\r\n}\r\n\r\nconst imageEditor = undoable(imageEditorCore, { filter: editorStateDiff });\r\n// #endregion\r\n\r\nexport const rootReducer = combineReducers({\r\n  drawer: drawerReducer,\r\n  selectedMenu,\r\n  imageEditor\r\n});\r\n","import {\r\n  OPEN_TOOL_DRAWER,\r\n  CLOSE_TOOL_DRAWER,\r\n  TOGGLE_TOOL_DRAWER\r\n} from \"../_action-types\";\r\nimport { Action } from \"redux\";\r\n\r\nexport const drawerReducer = (state = { isOpen: false }, action: Action<string>) => {\r\n  switch (action.type) {\r\n    case OPEN_TOOL_DRAWER:\r\n      return { ...state, isOpen: true };\r\n    case CLOSE_TOOL_DRAWER:\r\n      return { ...state, isOpen: false };\r\n    case TOGGLE_TOOL_DRAWER:\r\n      return { ...state, isOpen: !state.isOpen };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SelectedMenu } from \"../constant\";\r\nimport { SELECT_MENU_TOOL_OPTION } from \"../_action-types/menu-tool.action\";\r\nimport { Reducer, AnyAction } from \"redux\";\r\n\r\nexport const menuToolReducer: Reducer<SelectedMenu, AnyAction> = (state = SelectedMenu.NONE, action) => {\r\n  \r\n  if (action.type === SELECT_MENU_TOOL_OPTION) {\r\n    return action.selectedMenu;\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer, IAdjustImage } from \"../_reducers/root.reducer\";\r\nimport { SelectedMenu } from \"../constant\";\r\nimport { StateWithHistory } from \"redux-undo\";\r\n\r\ninterface IImageEditor {\r\n    adjustImage: IAdjustImage\r\n}\r\n\r\nexport type AppStore = {\r\n    drawer: { isOpen: boolean },\r\n    selectedMenu: SelectedMenu,\r\n    imageEditor: StateWithHistory<IImageEditor>\r\n}\r\n\r\nexport const store = createStore(rootReducer);\r\n","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { MenuBar, Header, ToolDrawer } from \"./components\";\r\n\r\nimport \"./styles.css\";\r\nimport { Provider as ContextProvider } from \"./context\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./_store\";\r\nimport * as config from \"./app.config.json\";\r\n\r\ntype State = { canvas: HTMLCanvasElement | null, ctx: CanvasRenderingContext2D | null };\r\n\r\n\r\nexport class App extends React.Component<{}, State> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.addImage = this.addImage.bind(this);\r\n    this.configureCanvas = this.configureCanvas.bind(this);\r\n    this.state = {\r\n      canvas: null,\r\n      ctx: null\r\n    }\r\n  }\r\n\r\n\r\n  addImage(e: React.ChangeEvent) {\r\n    const img = new Image();\r\n    const file = (e.target as HTMLInputElement).files[0];\r\n    const fr = new FileReader();\r\n    const { canvas, ctx } = this.state;\r\n\r\n    if(!file) return;\r\n\r\n    img.onload = () => {\r\n      if (canvas && ctx) {\r\n        const aspectRatio = img.width / img.height;\r\n        canvas.height = canvas.width / aspectRatio;\r\n\r\n        ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n        ctx.save();\r\n      }\r\n    }\r\n\r\n    fr.onloadend = () => {\r\n      img.src = fr.result as string;\r\n    }\r\n\r\n    fr.readAsDataURL(file);\r\n  }\r\n\r\n  configureCanvas(canvas: HTMLCanvasElement) {\r\n    this.setState((prevState, _props) => {\r\n      return { ...prevState, canvas, ctx: canvas.getContext('2d') };\r\n    }, () => {\r\n      this.state.canvas.width = config.CANVAS_WIDTH;\r\n      this.state.canvas.height = 500;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <ContextProvider value={{ canvas: this.state.canvas, ctx: this.state.ctx }} >\r\n          <div id=\"app\">\r\n            <Header />\r\n\r\n            <div className=\"input-container\">\r\n              <input onChange={this.addImage} id=\"file-control\" type=\"file\" accept=\"image/*\" />\r\n            </div>\r\n\r\n            <div className=\"canvas-container\">\r\n              <canvas ref={this.configureCanvas}></canvas>\r\n            </div>\r\n\r\n            <MenuBar />\r\n            <ToolDrawer />\r\n          </div>\r\n        </ContextProvider>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}